<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Log.Write(Log.TraceLevel, Exception, String, String) Method</title><meta name="Title" content="Write(Log.TraceLevel, Exception, String, String)" /><meta name="Help.Id" content="M:Telecom.Common.Log.Write(Telecom.Common.Log.TraceLevel,System.Exception,System.String,System.String)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Telecom.Common" /><meta name="guid" content="1c14c56a-9629-3cd0-2fbc-c160313ad70c" /><meta name="Description" content="Writes an exception message to the log with a specified trace level, including a custom message." /><meta name="tocFile" content="../toc/IDAAHD.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Bright Pattern Integration Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Log<span id="LST57CE55BB_0" data-languageSpecificText="cpp=::|nu=."></span>Write(Log<span id="LST57CE55BB_1" data-languageSpecificText="cpp=::|nu=."></span>Trace<wbr />Level, Exception, String, String) Method</h1><div class="summary">
            Writes an exception message to the log with a specified trace level, including a custom message.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="20f11733-aafe-b75f-608a-6dcca44ea137.htm">Telecom.Common</a><br /><strong>Assembly:</strong> TelecomInc.Common (in TelecomInc.Common.dll) Version: 1.0.0.0 (1.0.0.0)<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">Write</span>(
	<span class="identifier">Log<span id="LST57CE55BB_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TraceLevel</span> <span class="parameter">level</span>,
	<span class="identifier">Exception</span> <span class="parameter">ex</span>,
	<span class="identifier">string</span> <span class="parameter">message</span>,
	<span class="identifier">string</span> <span class="parameter">source</span> = ""
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Sub</span> <span class="identifier">Write</span> ( 
	<span class="parameter">level</span> <span class="keyword">As</span> <span class="identifier">Log<span id="LST57CE55BB_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TraceLevel</span>,
	<span class="parameter">ex</span> <span class="keyword">As</span> <span class="identifier">Exception</span>,
	<span class="parameter">message</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	Optional <span class="parameter">source</span> <span class="keyword">As</span> <span class="identifier">String</span> = ""
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">Write</span>(
	<span class="identifier">Log<span id="LST57CE55BB_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TraceLevel</span> <span class="parameter">level</span>, 
	<span class="identifier">Exception</span>^ <span class="parameter">ex</span>, 
	<span class="identifier">String</span>^ <span class="parameter">message</span>, 
	<span class="identifier">String</span>^ <span class="parameter">source</span> = L""
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">Write</span> : 
        <span class="parameter">level</span> : <span class="identifier">Log<span id="LST57CE55BB_5" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TraceLevel</span> * 
        <span class="parameter">ex</span> : <span class="identifier">Exception</span> * 
        <span class="parameter">message</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">source</span> : <span class="identifier">string</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">source</span> = defaultArg <span class="identifier">source</span> ""
*)
<span class="keyword">-&gt;</span> <span class="keyword">unit</span> </code></pre></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">level</span>  <a href="b323f037-cf82-beac-5ef0-581879ed8f53.htm">Log<span id="LST57CE55BB_6" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TraceLevel</a></dt><dd>The trace level of the exception message.</dd><dt class="has-text-weight-normal"><span class="parameter">ex</span>  <a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noopener noreferrer">Exception</a></dt><dd>The exception to log.</dd><dt class="has-text-weight-normal"><span class="parameter">message</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>A custom message to include with the exception details.</dd><dt class="has-text-weight-normal"><span class="parameter">source</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>  (Optional)</dt><dd>The source of the exception. If omitted, uses the calling method's name.</dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="ebfff84b-a806-e39d-934e-0306eb433669.htm">Log Class</a></div><div><a href="23eeaa18-d5fe-069a-2f8d-375938c1838d.htm">Write Overload</a></div><div><a href="20f11733-aafe-b75f-608a-6dcca44ea137.htm">Telecom.Common Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>